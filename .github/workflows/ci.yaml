name: PR CI by commet

on:
  issue_comment:
    types: [created]

env:
  FURIOSA_LLM_MODELS_TAG: "MLPerf4.1-v4.2.1"
  MODEL_COMPRESSOR_PRIVATE_TAG: "main"

jobs:
  Hello_Furiosa:
    if: ${{ contains(github.event.comment.body, '/test') }}
    runs-on: phil
    steps:
      - name: Get PR branch
        uses: kphilpark/pr-issue-info@v1
        id: comment-branch

      - name: Clone MCP:${{ env.MODEL_COMPRESSOR_PRIVATE_TAG }} repository
        uses: actions/checkout@v4
        with:
          repository: furiosa-ai/model-compressor-private
          ref: ${{ env.MODEL_COMPRESSOR_PRIVATE_TAG }}
          token: ${{ secrets.ORGANIZATION_REPO_TOKEN }}
          path: model-compressor-private

      - name: Clone furiosa-llm-models:${{ env.FURIOSA_LLM_MODELS_TAG }} repository
        uses: actions/checkout@v4
        with:
          repository: furiosa-ai/furiosa-llm-models
          ref: ${{ env.FURIOSA_LLM_MODELS_TAG }}
          token: ${{ secrets.ORGANIZATION_REPO_TOKEN }}
          path: furiosa-llm-models
      
      - name: Checkout latest PR commit
        uses: actions/checkout@v4
        with:
          path: inference
          ref: ${{ steps.comment-branch.outputs.head_sha }}
      
      - name: Install dependencies
        run: |
          pwd
          cd ./model-compression-private
          pip install -e .
          pwd
          cd ../furiosa-llm-models
          pip install -e .
     
      # - name: Run MLPerf FX Graph test on GPU A6000 [0]
      #   if: ${{ ! contains(github.event.comment.body, '/skip_ci') }}
      #   id: run-fxgraph-test
      #   run: |
      #     cd model-compression-lab
      #     export CUDA_VISIBLE_DEVICES=0
      #     export PYTHONPATH=$PYTHONPATH:$(pwd)
      #     python ./model-compressor-private/test/ci_test.py -t mlperf_fx_graph

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: 'Hello_Furiosa'
      
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = 'Hello_Furiosa';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${url}\n${name}: ${success ? 'succeeded ✅' : 'failed ❌'}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
